{"version":3,"sources":["components/Weather/Weather.js","components/LocationSearch/LocationSearch.js","components/PhoneInterface/PhoneInterface.js","App.js","serviceWorker.js","index.js"],"names":["ICON_PATH","LocationSearch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","address","handleChange","bind","assertThisInitialized","handleSelect","setState","geocodeByAddress","then","results","lat","geometry","location","lng","formatted_address","onLocationChange","catch","error","console","react_default","a","createElement","react_places_autocomplete_dist_default","value","onChange","onSelect","searchOptions","types","_ref","getInputProps","getSuggestionItemProps","suggestions","className","react_text_field_dist_default","label","outlined","fullWidth","react_text_field_dist","assign","react_list_dist_default","map","suggestion","react_list_dist","active","primaryText","description","React","Component","concat","process","Weather","activeIndex","datetime","current_temp","current_humidity","current_windspeed","current_precip","current_uv","current_visibility","current_graph_temp","current_graph_precip","current_graph_wind","dforecast_datetime","dforecast_temp","dforecast_precip","dforecast_wind","dforecast_icon","hforecast_temp","hforecast_precip","hforecast_wind","getWeather","handleActiveIndexUpdate","handleCurrentTemp","handleCurrentUV","handleUV","handleAddress","renderDForecastTemp","renderDForecastPrecip","renderDForecastWind","renderDForecast","renderHForecast","prevProps","prevState","uri","fetch","headers","Content-Type","Accept","response","json","current","currently","dforecast","daily","data","hforecast","hourly","dtemp_arr","dprecip_arr","dwind_arr","dtime_arr","dicon_arr","htemp_arr","role","type","hprecip_arr","hwind_arr","i","time","temperatureLow","temperatureHigh","precipProbability","windSpeed","icon","j","Date","temp_data","temperature","precip_data","wind_data","push","undefined","toFixed","_this2","humidity","uvIndex","visibility","summary","err","log","kelvin","text","charAt","toUpperCase","slice","phrase","_this3","phr_arr","split","word","capitalize","join","getDay","icon_desc","includes","index","src","getIcon","alt","temps","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","dist","columns","key","renderIcon","return","precips","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref6","_ref5","winds","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref9","_ref8","index_esm","width","height","chartType","loader","options","hAxis","gridlines","count","color","textStyle","bold","format","baselineColor","vAxis","annotations","style","domain","length","fontSize","alwaysOutside","lineWidth","colors","fontName","legend","curveType","animation","startup","easing","duration","handleVisibility","react_tab_bar_dist_default","react_tab_dist_default","PhoneInterface","isSearching","toggleSearch","handleLocationChange","today","hour","getHours","minute","getMinutes","toString","react_top_app_bar_dist","align","react_material_icon_dist_default","navIcon","actionItem","aria-label","hasRipple","onClick","LocationSearch_LocationSearch_LocationSearch","renderSearchBar","renderAppBar","rain_arr","counter","id","desktopColumns","phoneColumns","tabletColumns","renderRainBackground","dense","renderPhoneBar","renderBar","children","Weather_Weather_Weather","App","PhoneInterface_PhoneInterface_PhoneInterface","Boolean","window","hostname","match","ReactDOM","render","react_router_dom","basename","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95256d22.chunk.js","sourcesContent":["import React from 'react';\nimport {Cell, Row} from '@material/react-layout-grid';\nimport Tab from '@material/react-tab';\nimport TabBar from '@material/react-tab-bar';\nimport { Chart } from \"react-google-charts\";\nimport './Weather.scss';\nconst DARKSKY_API_KEY = process.env.REACT_APP_DARKSKY_APIKEY;\nlet ICON_PATH;\nif(process.env.REACT_APP_ENV == 'production'){\n  ICON_PATH = `${process.env.REACT_APP_PUBLIC_PATH}icons/amcharts_weather_icons_1.0.0/`;\n} else {\n  ICON_PATH = \"/icons/amcharts_weather_icons_1.0.0/\";\n}\n\nexport default class Weather extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      activeIndex: 0,\n      datetime: '',\n      lat: '',\n      lng: '',\n      address: '',\n      description: '',\n      current_temp: '',\n      current_humidity: '',\n      current_windspeed: '',\n      current_precip: '',\n      current_uv: '',\n      current_visibility: '',\n      current_graph_temp: [],\n      current_graph_precip: [],\n      current_graph_wind: [],\n      dforecast_datetime: [], //daily forecast\n      dforecast_temp: [],\n      dforecast_precip: [],\n      dforecast_wind: [],\n      dforecast_icon: [],\n      hforecast_temp: [], //hourly forecast, formated for Chart\n      hforecast_precip: [],\n      hforecast_wind: [],\n    };\n    this.getWeather = this.getWeather.bind(this);\n    this.handleActiveIndexUpdate = this.handleActiveIndexUpdate.bind(this);\n    this.handleCurrentTemp = this.handleCurrentTemp.bind(this);\n    this.handleCurrentUV = this.handleUV.bind(this);\n    this.handleAddress = this.handleAddress.bind(this);\n    this.renderDForecastTemp = this.renderDForecastTemp.bind(this);\n    this.renderDForecastPrecip = this.renderDForecastPrecip.bind(this);\n    this.renderDForecastWind = this.renderDForecastWind.bind(this);\n    this.renderDForecast = this.renderDForecast.bind(this);\n    this.renderHForecast = this.renderHForecast.bind(this);\n  }\n\n  componentDidMount(){\n    this.setState({lat: this.props.lat, lng: this.props.lng, address: this.props.address})\n    this.getWeather();\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(this.props.address !== prevProps.address){\n      this.setState({lat: this.props.lat, lng: this.props.lng, address: this.props.address})\n      this.getWeather();\n    }\n  }\n\n  handleActiveIndexUpdate(activeIndex) {this.setState({activeIndex: activeIndex})};\n\n\n  async getWeather() {\n    let cors_uri = `https://cors-anywhere.herokuapp.com/`;\n    let uri = `https://api.darksky.net/forecast/${DARKSKY_API_KEY}/${this.props.lat},${this.props.lng}?exclude=[minutely,flags]&units=si`;\n    await fetch(cors_uri + uri, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    .then(response => response.json())\n    .then(json => {\n      // console.log(json)\n      let current = json.currently\n      let dforecast = json.daily.data\n      let hforecast = json.hourly.data\n      let dtemp_arr = [];\n      let dprecip_arr = [];\n      let dwind_arr = [];\n      let dtime_arr = [];\n      let dicon_arr = [];\n      let htemp_arr = [['Time', 'Temperature', { role: \"annotation\", type: \"string\" }]];\n      let hprecip_arr = [['Time', 'Precipitation', { role: \"annotation\", type: \"string\" }]];\n      let hwind_arr = [['Time', 'Wind', { role: \"annotation\", type: \"string\" }]];\n\n      for(let i=0; i<4; i++){\n        // Data array starts today. We need the next 4 days\n        let data = dforecast[i+1];\n        dtime_arr[i] = data.time*1000; //Time given in miliseconds and we need seconds\n        dtemp_arr[i] = [data.temperatureLow, data.temperatureHigh] //Celcius\n        dprecip_arr[i] = data.precipProbability*100; //Decimal to Percentage\n        dwind_arr[i] = data.windSpeed*3600/1000; //m/s to km/h\n        dicon_arr[i] = data.icon;\n      }\n\n      for (let j=0; j<12; j++){ // Chart the next 12 hours\n        let data = hforecast[j];\n        let time = new Date(data.time*1000);\n        let temp_data = data.temperature;\n        let precip_data = (data.precipProbability*100);\n        let wind_data = (data.windSpeed*3600/1000);\n        htemp_arr.push([time, temp_data, j%2===0 ? undefined : temp_data.toFixed(1)])\n        hprecip_arr.push([time, precip_data, j%2===0 ? undefined : precip_data.toFixed(0)])\n        hwind_arr.push([time, wind_data, j%2===0 ? undefined : wind_data.toFixed(1)])\n      }\n\n      this.setState({\n        datetime: current.time,\n        current_temp: current.temperature.toFixed(0),\n        current_humidity: current.humidity,\n        current_windspeed: current.windSpeed,\n        current_precip: current.precipProbability,\n        current_uv: current.uvIndex,\n        current_visibility: current.visibility,\n        description: current.summary,\n        dforecast_datetime: dtime_arr,\n        dforecast_temp: dtemp_arr,\n        dforecast_precip: dprecip_arr,\n        dforecast_wind: dwind_arr,\n        dforecast_icon: dicon_arr,\n        hforecast_temp: htemp_arr,\n        hforecast_precip: hprecip_arr,\n        hforecast_wind: hwind_arr,\n      })\n    })\n    .catch(err => console.log(err));\n  }\n\n  convertKelvinToCelcius(kelvin){\n    return (kelvin - 273.15).toFixed(1)\n  }\n\n  capitalize(text){\n    return text.charAt(0).toUpperCase() + text.slice(1)\n  }\n\n  capitalizePhrase(phrase){\n    let phr_arr = phrase.split(' ');\n    phr_arr = phr_arr.map(word => this.capitalize(word));\n    return phr_arr.join(' ');\n  }\n\n  handleCurrentTemp(){\n    if(this.state.current_temp !== ''){\n      return this.state.current_temp;\n    }\n  }\n\n  handleAddress(){\n    if(this.state.address !== ''){\n      return this.capitalize(this.state.address.split(', ')[0]) + ', ' + this.state.address.split(', ').slice(-1)[0]\n    }\n    return ''\n  }\n\n  handleUV(){\n    if(this.state.current_uv !== ''){\n      return `UV Index ${this.state.current_uv}`\n    }\n    return ''\n  }\n\n  handleVisibility(){\n    if(this.state.current_uv !== ''){\n      return `Visibility ${this.state.current_visibility.toFixed(0)} km`\n    }\n    return ''\n  }\n\n  getDay(time){\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    let index = new Date(time).getDay()\n    return days[index];\n  }\n\n  getIcon(icon_desc){\n    if(icon_desc.includes('cloudy')){\n      return 'cloudy.svg';\n    } else if (icon_desc.includes('rain')){\n      return 'rainy-7.svg';\n    } else if (icon_desc.includes('clear')){\n      return 'day.svg';\n    } else if (icon_desc.includes('snow')){\n      return 'snowy-6.svg';\n    } else if (icon_desc.includes('thunder')){\n      return 'thunder.svg';\n    }\n  }\n\n  renderIcon(index){\n    return (\n      <i><img src={`${ICON_PATH}/animated/${this.getIcon(this.state.dforecast_icon[index])}`} alt='weather-icon' /></i>\n    )\n  }\n\n  renderDForecastTemp(){\n    let temps = [];\n    for(const [index, value] of this.state.dforecast_temp.entries()){\n      temps.push(\n        <Cell columns={3} key={'ftemp-' + index} className=\"dcell\">\n          <p><strong>{this.getDay(this.state.dforecast_datetime[index])}</strong></p>\n          {this.renderIcon(index)}\n          <p>{value[0].toFixed(0)}-{value[1].toFixed(0)}&deg;C</p>\n        </Cell>\n      )\n    }\n    return <Row>{temps}</Row>\n  }\n\n  renderDForecastPrecip(){\n    let precips = [];\n    for(const [index, value] of this.state.dforecast_precip.entries()){\n      precips.push(\n        <Cell columns={3} key={'fprecip-' + index} className=\"dcell\">\n          <p><strong>{this.getDay(this.state.dforecast_datetime[index])}</strong></p>\n          {this.renderIcon(index)}\n          <p>{(value).toFixed(0)}%</p>\n        </Cell>\n      )\n    }\n    return <Row>{precips}</Row>\n  }\n\n  renderDForecastWind(){\n    let winds = [];\n    for(const [index, value] of this.state.dforecast_wind.entries()){\n      winds.push(\n        <Cell columns={3} key={'fwind-' + index} className=\"dcell\">\n          <p><strong>{this.getDay(this.state.dforecast_datetime[index])}</strong></p>\n          {this.renderIcon(index)}\n          <p>{(value).toFixed(0)}km/h</p>\n        </Cell>\n      )\n    }\n    return <Row>{winds}</Row>\n  }\n\n  renderDForecast(){\n    switch(this.state.activeIndex){\n      case 0: return this.renderDForecastTemp();\n      case 1: return this.renderDForecastPrecip();\n      case 2: return this.renderDForecastWind();\n      default: return;\n    }\n  }\n\n  renderHForecast(){\n    let hforecast;\n    switch(this.state.activeIndex){\n      case 0: hforecast = this.state.hforecast_temp; break;\n      case 1: hforecast = this.state.hforecast_precip; break;\n      case 2: hforecast = this.state.hforecast_wind; break;\n      default: break;\n    }\n    return (\n       <Chart\n        width={'100%'} height={'150px'} chartType=\"LineChart\"\n        loader={<div>Loading Chart</div>}\n        data={hforecast}\n        options={\n          {\n            hAxis:{\n              gridlines: {count: 6, color: 'white'},\n              textStyle: {color: 'lightgrey', bold: true},\n              format: 'hh a',\n              baselineColor: 'white',\n            },\n            vAxis:{\n              gridlines:{count: 0},\n              textStyle: {color: 'white'}\n            },\n            annotations: {\n              style: 'point',\n              domain: {style: {color: 'lightgrey', length: 50}},\n              textStyle: {color: 'black', fontSize: 12},\n              alwaysOutside: true,\n            },\n            lineWidth: 4,\n            colors: ['#56A0EE','#8C77FF'],\n            fontName: 'Product Sans',\n            legend: 'none',\n            curveType: 'function',\n            animation: {\n              startup: true,\n              easing: 'linear',\n              duration: 800,\n            },\n          }\n        }\n      />\n    );\n  }\n\n  render(){\n    return (\n      <div className=\"content\">\n        <div className=\"current-info\">\n          <h1 className=\"current-temp\">{this.handleCurrentTemp()}<sup className=\"current-tempdeg\">{`\\u00b0`}</sup></h1>\n          <h3 className=\"no-margin current-desc\">{this.state.description}</h3>\n          <p className=\"no-margin current-address\">{this.handleAddress()}</p>\n          <p className=\"current-uv\">{this.handleUV()}</p>\n          <p className=\"no-margin current-visibility\">{this.handleVisibility()}</p>\n        </div>\n        <div className=\"tab-bar\">\n          <TabBar activeIndex={this.state.activeIndex} handleActiveIndexUpdate={this.handleActiveIndexUpdate}>\n            <Tab><span className='mdc-tab__text-label'>Temperature</span></Tab>\n            <Tab><span className='mdc-tab__text-label'>Precipitation</span></Tab>\n            <Tab><span className='mdc-tab__text-label'>&nbsp;&nbsp;Wind&nbsp;&nbsp;&nbsp;</span></Tab>\n          </TabBar>\n        </div>\n        <div className=\"current-detail\">\n          <p>Precipitation {(this.state.current_precip*100).toFixed(0)}%</p>\n          <span>&#09;&middot;&#09;</span>\n          <p>Humidity {(this.state.current_humidity*100).toFixed(0)}%</p>\n          <span>&#09;&middot;&#09;</span>\n          <p>Wind {(this.state.current_windspeed*3600/1000).toFixed(0)}km/h</p>\n        </div>\n        <div className=\"forecast-hourly\">\n          {this.renderHForecast()}\n        </div>\n        <div className=\"forecast-daily\">\n          {this.renderDForecast()}\n        </div>\n      </div>\n      )\n  }\n}","import React from 'react';\nimport PlacesAutocomplete, {geocodeByAddress} from 'react-places-autocomplete';\nimport List, {ListItem, ListItemText} from '@material/react-list';\nimport TextField, {Input} from '@material/react-text-field';\nimport './LocationSearch.scss';\n\nexport default class LocationSearch extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {address: ''};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleChange(address){\n    this.setState({address: address});\n  }\n\n  // When the user selects an autocomplete suggestion...\n  handleSelect(address){\n    geocodeByAddress(address)\n      .then(function(results){\n        let lat = results[0].geometry.location.lat();\n        let lng = results[0].geometry.location.lng();\n        let address = results[0].formatted_address;\n        this.props.onLocationChange(lat, lng, address);\n      }.bind(this))\n      .catch(error => console.error('Error', error))\n\n  }\n\n  render(){\n    const renderInput = ({ getInputProps, getSuggestionItemProps, suggestions }) => (\n      <div className=\"autocomplete-root\">\n        <TextField label=\"Search Location\" outlined=\"true\" fullWidth=\"true\">\n          <Input className=\"form-control\" {...getInputProps()} />\n        </TextField>\n        <List className=\"autocomplete-dropdown-container\">\n          {suggestions.map(suggestion => (\n            <ListItem {...getSuggestionItemProps(suggestion)} className={suggestion.active\n                  ? 'suggestion-item active' : 'suggestion-item'}>\n              <ListItemText primaryText={suggestion.description} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n    const searchOptions = {types: ['(cities)']}\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n        searchOptions={searchOptions}\n      >\n        {renderInput}\n      </PlacesAutocomplete>\n      )\n  }\n}","import React from 'react';\nimport {Cell, Row} from '@material/react-layout-grid';\nimport { TopAppBarFixedAdjust, TopAppBarIcon,  TopAppBarRow, TopAppBarSection, TopAppBarTitle } from '@material/react-top-app-bar';\nimport MaterialIcon from '@material/react-material-icon';\nimport './PhoneInterface.scss';\nimport LocationSearch from '../LocationSearch/LocationSearch.js';\nimport Weather from '../Weather/Weather.js';\n\nexport default class PhoneInterface extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isSearching: false,\n      lat: 49.239623,\n      lng: -123.110912,\n      address: 'Vancouver, Canada'\n    }\n    this.toggleSearch = this.toggleSearch.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n  }\n\n  handleLocationChange(lat, lng, address){\n    this.setState({lat: lat, lng: lng, address: address, isSearching: false});\n  }\n\n  renderPhoneBar(){\n    let today = new Date();\n    let hour = today.getHours();\n    let minute = today.getMinutes();\n    if(hour.toString().length === 1){ hour = '0' + hour }\n    if(minute.toString().length === 1){ minute = '0' + minute }\n    return (\n      <TopAppBarRow>\n        <TopAppBarSection align='start' className=\"skinny-padding\">\n          <TopAppBarIcon>\n            <strong className=\"phone-icon time\">{hour}:{minute}</strong>\n          </TopAppBarIcon>\n        </TopAppBarSection>\n        <TopAppBarSection align='end' className=\"skinny-padding\">\n          <TopAppBarIcon>\n            <MaterialIcon icon='signal_cellular_alt' className=\"phone-icon\" />\n          </TopAppBarIcon>\n          <TopAppBarIcon>\n            <MaterialIcon icon='wifi' className=\"phone-icon\" />\n          </TopAppBarIcon>\n          <TopAppBarIcon>\n            <MaterialIcon icon='battery_full' className=\"battery-rotate phone-icon\" />\n          </TopAppBarIcon>\n        </TopAppBarSection>\n      </TopAppBarRow>\n    )\n  }\n\n  toggleSearch(){\n    this.setState({isSearching: !this.state.isSearching});\n    console.log('showsearch: ' + this.state.isSearching);\n  }\n\n  renderAppBar(){\n    return (\n      <TopAppBarRow>\n        <TopAppBarSection align='start'>\n          <TopAppBarIcon navIcon className=\"non-pointer\">\n            <MaterialIcon icon='cloud_queue' />\n          </TopAppBarIcon>\n        </TopAppBarSection>\n        <TopAppBarSection align='middle'>\n          <TopAppBarTitle className=\"weather-title\">\n            <p>Cuaca &middot; Weather App</p>\n          </TopAppBarTitle>\n        </TopAppBarSection>\n        <TopAppBarSection align='end' role='toolbar'>\n          <TopAppBarIcon actionItem>\n            <MaterialIcon\n              aria-label=\"add location\"\n              hasRipple\n              icon='search'\n              onClick={this.toggleSearch}\n            />\n          </TopAppBarIcon>\n        </TopAppBarSection>\n      </TopAppBarRow>\n    )\n  }\n\n  renderSearchBar(){\n    return (\n      <div>\n      <div className=\"search-width search-bar-item\">\n      <LocationSearch  onLocationChange={this.handleLocationChange} />\n      </div>\n      <TopAppBarSection align='end' role='toolbar' className=\"search-bar-item search-close-icon\">\n          <TopAppBarIcon actionItem>\n            <MaterialIcon\n              aria-label=\"close search\"\n              hasRipple\n              icon='close'\n              onClick={this.toggleSearch}\n            />\n          </TopAppBarIcon>\n        </TopAppBarSection>\n      </div>\n    )\n  }\n\n  renderBar(){\n    if(this.state.isSearching) return this.renderSearchBar()\n    else return this.renderAppBar()\n  }\n\n  renderRainBackground(){\n    let rain_arr = [];\n    let counter = 1;\n    for(let i=0; i<6; i++){\n      rain_arr.push(<div className=\"raindrop light\" id={\"raindrop-\" + counter} key={\"raindrop-\" + counter}></div>);\n      counter++;\n    }\n    for(let i=0; i<4; i++){\n      rain_arr.push(<div className=\"raindrop dark\" id={\"raindrop-\" + counter} key={\"raindrop-\" + counter}></div>);\n      counter++;\n    }\n    return (\n      <div>{rain_arr}</div>\n    )\n  }\n\n\n  render(){\n    return (\n      <Row className=\"phone-interface\">\n        <Cell desktopColumns={4} phoneColumns={0} tabletColumns={2}></Cell>\n        <Cell desktopColumns={4} phoneColumns={4} tabletColumns={4} align=\"middle\" className=\"main mdc-elevation--z10 mdc-elevation-transition\">\n          <div className=\"info-background\">\n          {this.renderRainBackground()}\n          <TopAppBarFixedAdjust className=\"weather-bar\" dense=\"true\">\n            {this.renderPhoneBar()}\n            {this.renderBar()}\n          </TopAppBarFixedAdjust>\n          {this.props.children}\n          <Weather lat={this.state.lat} lng={this.state.lng} address={this.state.address} />\n          </div>\n        </Cell>\n      </Row>\n      )\n  }\n}","import React from 'react';\nimport './App.css';\nimport {Grid} from '@material/react-layout-grid';\nimport PhoneInterface from './components/PhoneInterface/PhoneInterface.js';\n\nfunction App() {\n  return (\n    <Grid className=\"App\">\n      <PhoneInterface>\n      </PhoneInterface>\n    </Grid>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}